// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model YoungPeople {
  id                  String         @id @default(uuid())
  lastName            String
  firstName           String
  middleName          String
  suffix              String
  dateOfBirth         DateTime
  age                 Int
  gender              Gender
  contactPerson       String
  contactRelationship String
  contactNumber       String
  Registration        Registration[]
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  updatedBy           String?
  image               String?
}

model Registration {
  id                String           @id @default(uuid())
  YoungPeople       YoungPeople      @relation(fields: [youngPeopleId], references: [id])
  youngPeopleId     String
  dateApplied       DateTime
  GradeLevel        GradeLevel?      @relation(fields: [gradeLevelId], references: [id])
  gradeLevelId      String?
  Hall              Hall?            @relation(fields: [hallId], references: [id])
  hallId            String?
  Classification    Classification?  @relation(fields: [classificationId], references: [id])
  classificationId  String?
  remarks           String?
  BasicHealthInfo   BasicHealthInfo? @relation(fields: [basicHealthInfoId], references: [id])
  basicHealthInfoId String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  updatedBy         String?
}

model GradeLevel {
  id           String         @id @default(uuid())
  name         String
  Registration Registration[]
}

model Hall {
  id           String         @id @default(uuid())
  name         String
  Registration Registration[]
}

model Classification {
  id           String         @id @default(uuid())
  name         String
  Registration Registration[]
}

model BasicHealthInfo {
  id                         String         @id @default(uuid())
  isAllergy                  Boolean?
  allergyDescription         String?
  allergyMedicine            String?
  isHealthCondition          Boolean?
  healthConditionDescription String?
  healthConditionMedication  String?
  Registration               Registration[]
}

enum Gender {
  brother
  sister
}
